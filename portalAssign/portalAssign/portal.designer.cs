#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace portalAssign
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="portal")]
	public partial class portalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcourse(course instance);
    partial void Updatecourse(course instance);
    partial void Deletecourse(course instance);
    partial void Insertgrade(grade instance);
    partial void Updategrade(grade instance);
    partial void Deletegrade(grade instance);
    partial void InsertpreReq(preReq instance);
    partial void UpdatepreReq(preReq instance);
    partial void DeletepreReq(preReq instance);
    partial void Insertsection(section instance);
    partial void Updatesection(section instance);
    partial void Deletesection(section instance);
    partial void Insertstudent(student instance);
    partial void Updatestudent(student instance);
    partial void Deletestudent(student instance);
    #endregion
		
		public portalDataContext() : 
				base(global::portalAssign.Properties.Settings.Default.portalConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public portalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public portalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public portalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public portalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<course> courses
		{
			get
			{
				return this.GetTable<course>();
			}
		}
		
		public System.Data.Linq.Table<grade> grades
		{
			get
			{
				return this.GetTable<grade>();
			}
		}
		
		public System.Data.Linq.Table<preReq> preReqs
		{
			get
			{
				return this.GetTable<preReq>();
			}
		}
		
		public System.Data.Linq.Table<section> sections
		{
			get
			{
				return this.GetTable<section>();
			}
		}
		
		public System.Data.Linq.Table<student> students
		{
			get
			{
				return this.GetTable<student>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.course")]
	public partial class course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _course_id;
		
		private string _course_name;
		
		private string _credit_hrs;
		
		private string _department;
		
		private EntitySet<preReq> _preReqs;
		
		private EntitySet<section> _sections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncourse_idChanging(int value);
    partial void Oncourse_idChanged();
    partial void Oncourse_nameChanging(string value);
    partial void Oncourse_nameChanged();
    partial void Oncredit_hrsChanging(string value);
    partial void Oncredit_hrsChanged();
    partial void OndepartmentChanging(string value);
    partial void OndepartmentChanged();
    #endregion
		
		public course()
		{
			this._preReqs = new EntitySet<preReq>(new Action<preReq>(this.attach_preReqs), new Action<preReq>(this.detach_preReqs));
			this._sections = new EntitySet<section>(new Action<section>(this.attach_sections), new Action<section>(this.detach_sections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_name", DbType="NVarChar(MAX)")]
		public string course_name
		{
			get
			{
				return this._course_name;
			}
			set
			{
				if ((this._course_name != value))
				{
					this.Oncourse_nameChanging(value);
					this.SendPropertyChanging();
					this._course_name = value;
					this.SendPropertyChanged("course_name");
					this.Oncourse_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit_hrs", DbType="NVarChar(MAX)")]
		public string credit_hrs
		{
			get
			{
				return this._credit_hrs;
			}
			set
			{
				if ((this._credit_hrs != value))
				{
					this.Oncredit_hrsChanging(value);
					this.SendPropertyChanging();
					this._credit_hrs = value;
					this.SendPropertyChanged("credit_hrs");
					this.Oncredit_hrsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="NVarChar(MAX)")]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="course_preReq", Storage="_preReqs", ThisKey="course_id", OtherKey="course_id")]
		public EntitySet<preReq> preReqs
		{
			get
			{
				return this._preReqs;
			}
			set
			{
				this._preReqs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="course_section", Storage="_sections", ThisKey="course_id", OtherKey="course_id")]
		public EntitySet<section> sections
		{
			get
			{
				return this._sections;
			}
			set
			{
				this._sections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_preReqs(preReq entity)
		{
			this.SendPropertyChanging();
			entity.course = this;
		}
		
		private void detach_preReqs(preReq entity)
		{
			this.SendPropertyChanging();
			entity.course = null;
		}
		
		private void attach_sections(section entity)
		{
			this.SendPropertyChanging();
			entity.course = this;
		}
		
		private void detach_sections(section entity)
		{
			this.SendPropertyChanging();
			entity.course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.grade")]
	public partial class grade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _std_id;
		
		private System.Nullable<int> _section_id;
		
		private string _grade1;
		
		private EntityRef<section> _section;
		
		private EntityRef<student> _student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstd_idChanging(int value);
    partial void Onstd_idChanged();
    partial void Onsection_idChanging(System.Nullable<int> value);
    partial void Onsection_idChanged();
    partial void Ongrade1Changing(string value);
    partial void Ongrade1Changed();
    #endregion
		
		public grade()
		{
			this._section = default(EntityRef<section>);
			this._student = default(EntityRef<student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int std_id
		{
			get
			{
				return this._std_id;
			}
			set
			{
				if ((this._std_id != value))
				{
					if (this._student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstd_idChanging(value);
					this.SendPropertyChanging();
					this._std_id = value;
					this.SendPropertyChanged("std_id");
					this.Onstd_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_section_id", DbType="Int")]
		public System.Nullable<int> section_id
		{
			get
			{
				return this._section_id;
			}
			set
			{
				if ((this._section_id != value))
				{
					if (this._section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsection_idChanging(value);
					this.SendPropertyChanging();
					this._section_id = value;
					this.SendPropertyChanged("section_id");
					this.Onsection_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="grade", Storage="_grade1", DbType="NVarChar(MAX)")]
		public string grade1
		{
			get
			{
				return this._grade1;
			}
			set
			{
				if ((this._grade1 != value))
				{
					this.Ongrade1Changing(value);
					this.SendPropertyChanging();
					this._grade1 = value;
					this.SendPropertyChanged("grade1");
					this.Ongrade1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="section_grade", Storage="_section", ThisKey="section_id", OtherKey="section_id", IsForeignKey=true)]
		public section section
		{
			get
			{
				return this._section.Entity;
			}
			set
			{
				section previousValue = this._section.Entity;
				if (((previousValue != value) 
							|| (this._section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._section.Entity = null;
						previousValue.grades.Remove(this);
					}
					this._section.Entity = value;
					if ((value != null))
					{
						value.grades.Add(this);
						this._section_id = value.section_id;
					}
					else
					{
						this._section_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_grade", Storage="_student", ThisKey="std_id", OtherKey="std_id", IsForeignKey=true)]
		public student student
		{
			get
			{
				return this._student.Entity;
			}
			set
			{
				student previousValue = this._student.Entity;
				if (((previousValue != value) 
							|| (this._student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._student.Entity = null;
						previousValue.grade = null;
					}
					this._student.Entity = value;
					if ((value != null))
					{
						value.grade = this;
						this._std_id = value.std_id;
					}
					else
					{
						this._std_id = default(int);
					}
					this.SendPropertyChanged("student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.preReq")]
	public partial class preReq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _serial_no;
		
		private System.Nullable<int> _course_id;
		
		private string _pre_id;
		
		private EntityRef<course> _course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onserial_noChanging(int value);
    partial void Onserial_noChanged();
    partial void Oncourse_idChanging(System.Nullable<int> value);
    partial void Oncourse_idChanged();
    partial void Onpre_idChanging(string value);
    partial void Onpre_idChanged();
    #endregion
		
		public preReq()
		{
			this._course = default(EntityRef<course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serial_no", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int serial_no
		{
			get
			{
				return this._serial_no;
			}
			set
			{
				if ((this._serial_no != value))
				{
					this.Onserial_noChanging(value);
					this.SendPropertyChanging();
					this._serial_no = value;
					this.SendPropertyChanged("serial_no");
					this.Onserial_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="Int")]
		public System.Nullable<int> course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					if (this._course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pre_id", DbType="NChar(10)")]
		public string pre_id
		{
			get
			{
				return this._pre_id;
			}
			set
			{
				if ((this._pre_id != value))
				{
					this.Onpre_idChanging(value);
					this.SendPropertyChanging();
					this._pre_id = value;
					this.SendPropertyChanged("pre_id");
					this.Onpre_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="course_preReq", Storage="_course", ThisKey="course_id", OtherKey="course_id", IsForeignKey=true)]
		public course course
		{
			get
			{
				return this._course.Entity;
			}
			set
			{
				course previousValue = this._course.Entity;
				if (((previousValue != value) 
							|| (this._course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._course.Entity = null;
						previousValue.preReqs.Remove(this);
					}
					this._course.Entity = value;
					if ((value != null))
					{
						value.preReqs.Add(this);
						this._course_id = value.course_id;
					}
					else
					{
						this._course_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.section")]
	public partial class section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _section_id;
		
		private System.Nullable<int> _course_id;
		
		private System.Nullable<int> _semester;
		
		private System.Nullable<int> _year;
		
		private string _instructor;
		
		private EntitySet<grade> _grades;
		
		private EntityRef<course> _course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsection_idChanging(int value);
    partial void Onsection_idChanged();
    partial void Oncourse_idChanging(System.Nullable<int> value);
    partial void Oncourse_idChanged();
    partial void OnsemesterChanging(System.Nullable<int> value);
    partial void OnsemesterChanged();
    partial void OnyearChanging(System.Nullable<int> value);
    partial void OnyearChanged();
    partial void OninstructorChanging(string value);
    partial void OninstructorChanged();
    #endregion
		
		public section()
		{
			this._grades = new EntitySet<grade>(new Action<grade>(this.attach_grades), new Action<grade>(this.detach_grades));
			this._course = default(EntityRef<course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_section_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int section_id
		{
			get
			{
				return this._section_id;
			}
			set
			{
				if ((this._section_id != value))
				{
					this.Onsection_idChanging(value);
					this.SendPropertyChanging();
					this._section_id = value;
					this.SendPropertyChanged("section_id");
					this.Onsection_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="Int")]
		public System.Nullable<int> course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					if (this._course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_semester", DbType="Int")]
		public System.Nullable<int> semester
		{
			get
			{
				return this._semester;
			}
			set
			{
				if ((this._semester != value))
				{
					this.OnsemesterChanging(value);
					this.SendPropertyChanging();
					this._semester = value;
					this.SendPropertyChanged("semester");
					this.OnsemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Int")]
		public System.Nullable<int> year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_instructor", DbType="NVarChar(MAX)")]
		public string instructor
		{
			get
			{
				return this._instructor;
			}
			set
			{
				if ((this._instructor != value))
				{
					this.OninstructorChanging(value);
					this.SendPropertyChanging();
					this._instructor = value;
					this.SendPropertyChanged("instructor");
					this.OninstructorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="section_grade", Storage="_grades", ThisKey="section_id", OtherKey="section_id")]
		public EntitySet<grade> grades
		{
			get
			{
				return this._grades;
			}
			set
			{
				this._grades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="course_section", Storage="_course", ThisKey="course_id", OtherKey="course_id", IsForeignKey=true)]
		public course course
		{
			get
			{
				return this._course.Entity;
			}
			set
			{
				course previousValue = this._course.Entity;
				if (((previousValue != value) 
							|| (this._course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._course.Entity = null;
						previousValue.sections.Remove(this);
					}
					this._course.Entity = value;
					if ((value != null))
					{
						value.sections.Add(this);
						this._course_id = value.course_id;
					}
					else
					{
						this._course_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_grades(grade entity)
		{
			this.SendPropertyChanging();
			entity.section = this;
		}
		
		private void detach_grades(grade entity)
		{
			this.SendPropertyChanging();
			entity.section = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.student")]
	public partial class student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _std_id;
		
		private string _std_name;
		
		private string _std_class;
		
		private string _std_major;
		
		private EntityRef<grade> _grade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstd_idChanging(int value);
    partial void Onstd_idChanged();
    partial void Onstd_nameChanging(string value);
    partial void Onstd_nameChanged();
    partial void Onstd_classChanging(string value);
    partial void Onstd_classChanged();
    partial void Onstd_majorChanging(string value);
    partial void Onstd_majorChanged();
    #endregion
		
		public student()
		{
			this._grade = default(EntityRef<grade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int std_id
		{
			get
			{
				return this._std_id;
			}
			set
			{
				if ((this._std_id != value))
				{
					this.Onstd_idChanging(value);
					this.SendPropertyChanging();
					this._std_id = value;
					this.SendPropertyChanged("std_id");
					this.Onstd_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_name", DbType="NVarChar(MAX)")]
		public string std_name
		{
			get
			{
				return this._std_name;
			}
			set
			{
				if ((this._std_name != value))
				{
					this.Onstd_nameChanging(value);
					this.SendPropertyChanging();
					this._std_name = value;
					this.SendPropertyChanged("std_name");
					this.Onstd_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_class", DbType="NVarChar(MAX)")]
		public string std_class
		{
			get
			{
				return this._std_class;
			}
			set
			{
				if ((this._std_class != value))
				{
					this.Onstd_classChanging(value);
					this.SendPropertyChanging();
					this._std_class = value;
					this.SendPropertyChanged("std_class");
					this.Onstd_classChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_std_major", DbType="NVarChar(MAX)")]
		public string std_major
		{
			get
			{
				return this._std_major;
			}
			set
			{
				if ((this._std_major != value))
				{
					this.Onstd_majorChanging(value);
					this.SendPropertyChanging();
					this._std_major = value;
					this.SendPropertyChanged("std_major");
					this.Onstd_majorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_grade", Storage="_grade", ThisKey="std_id", OtherKey="std_id", IsUnique=true, IsForeignKey=false)]
		public grade grade
		{
			get
			{
				return this._grade.Entity;
			}
			set
			{
				grade previousValue = this._grade.Entity;
				if (((previousValue != value) 
							|| (this._grade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._grade.Entity = null;
						previousValue.student = null;
					}
					this._grade.Entity = value;
					if ((value != null))
					{
						value.student = this;
					}
					this.SendPropertyChanged("grade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
